--source ../include/have_columnstore.inc
--source ../include/combinations.myisam-columnstore.inc

--disable_warnings
DROP DATABASE IF EXISTS sumavgoverflow;
--enable_warnings

CREATE DATABASE sumavgoverflow;
USE sumavgoverflow;

DROP TABLE IF EXISTS aggoverflowa;
DROP TABLE IF EXISTS aggoverflowb;
DROP TABLE IF EXISTS aggoverflowc;
DROP TABLE IF EXISTS aggoverflowd;

CREATE TABLE aggoverflowa
(
  id INT,
  grp INT,
  f1 BIGINT(20) DEFAULT NULL,
  f2 BIGINT(20) UNSIGNED DEFAULT NULL,
  f3 BIGINT(20) DEFAULT NULL,
  f4 BIGINT(20) UNSIGNED DEFAULT NULL,
  f5 DOUBLE DEFAULT NULL,
  f6 DOUBLE DEFAULT NULL
);

CREATE TABLE aggoverflowb
(
  id INT,
  grp INT,
  f1 BIGINT(20) DEFAULT NULL,
  f2 BIGINT(20) UNSIGNED DEFAULT NULL,
  f3 BIGINT(20) DEFAULT NULL,
  f4 BIGINT(20) UNSIGNED DEFAULT NULL,
  f5 DOUBLE DEFAULT NULL,
  f6 DOUBLE DEFAULT NULL
);

CREATE TABLE aggoverflowc
(
  id INT,
  grp INT,
  f1 BIGINT(20) DEFAULT NULL,
  f2 BIGINT(20) UNSIGNED DEFAULT NULL,
  f3 BIGINT(20) DEFAULT NULL,
  f4 BIGINT(20) UNSIGNED DEFAULT NULL,
  f5 DOUBLE DEFAULT NULL,
  f6 DOUBLE DEFAULT NULL
);

CREATE TABLE aggoverflowd
(
  id INT,
  grp INT,
  d1 DECIMAL(6,2) DEFAULT NULL,
  d2 DECIMAL(8,4) UNSIGNED DEFAULT NULL,
  d3 DECIMAL(18,5) DEFAULT NULL,
  d4 DECIMAL(18,3) UNSIGNED DEFAULT NULL
);

insert into aggoverflowa values (1,  100, -78,    1, -7800000000000000000,   100000000000000000, -7800000000000000000,   100000000000000000),
(2,  100, -79,    2, -7900000000000000000,   200000000000000000, -7900000000000000000,   200000000000000000),
(3,  100, -80,    3, -8000000000000000000,   300000000000000000, -8000000000000000000,   300000000000000000),
(4,  100, -81,    4, -8100000000000000000,   400000000000000000, -8100000000000000000,   400000000000000000),
(5,  200, -82,    5, -8200000000000000000,   500000000000000000, -8200000000000000000,   500000000000000000),
(6,  200, -83,    6, -8300000000000000000,   600000000000000000, -8300000000000000000,   600000000000000000),
(7,  200, -84,    7, -8400000000000000000,   700000000000000000, -8400000000000000000,   700000000000000000),
(8,  200, -85,    8, -8500000000000000000,   800000000000000000, -8500000000000000000,   800000000000000000),
(9,  200, -86,    9, -8600000000000000000,   900000000000000000, -8600000000000000000,   900000000000000000),
(10, 300, -87,    1, -8700000000000000000,   100000000000000000, -8700000000000000000,   100000000000000000),
(11, 400, -88,   10, -8800000000000000000,  1000000000000000000, -8800000000000000000,  1000000000000000000),
(12, 400, -89,   11, -8900000000000000000,  1100000000000000000, -8900000000000000000,  1100000000000000000),
(13, 400, -90,   12, -9000000000000000000,  1200000000000000000, -9000000000000000000,  1200000000000000000),
(14, 400, -91,   13, -9100000000000000000,  1300000000000000000, -9100000000000000000,  1300000000000000000),
(15, 400, -92,   12, -9200000000000000000,  1200000000000000000, -9200000000000000000,  1200000000000000000),
(16, 400,  781,  30,  7810000000000000000,  3000000000000000000,  7810000000000000000,  3000000000000000000),
(17, 400,  792,  40,  7920000000000000000,  4000000000000000000,  7920000000000000000,  4000000000000000000),
(18, 400,  804,  50,  8030000000000000000,  5000000000000000000,  8030000000000000000,  5000000000000000000),
(19, 500,  815,  60,  8140000000000000000,  6000000000000000000,  8140000000000000000,  6000000000000000000),
(20, 500,  826,  70,  8250000000000000000,  7000000000000000000,  8250000000000000000,  7000000000000000000),
(21, 500,  837,  80,  8360000000000000000,  8000000000000000000,  8360000000000000000,  8000000000000000000),
(22, 500,  848,  90,  8470000000000000000,  9000000000000000000,  8470000000000000000,  9000000000000000000),
(23, 500,  859, 100,  8580000000000000000, 10000000000000000000,  8580000000000000000, 10000000000000000000),
(24, 500,  861, 110,  8690000000000000000, 11000000000000000000,  8690000000000000000, 11000000000000000000),
(25, 500,  872, 120,  8710000000000000000, 12000000000000000000,  8710000000000000000, 12000000000000000000),
(26, 600,  883, 130,  8820000000000000000, 13000000000000000000,  8820000000000000000, 13000000000000000000),
(27, 600,  894, 140,  8930000000000000000, 14000000000000000000,  8930000000000000000, 14000000000000000000),
(28, 700,  905, 150,  9040000000000000000, 15000000000000000000,  9040000000000000000, 15000000000000000000),
(29, 700,  916, 160,  9150000000000000000, 16000000000000000000,  9150000000000000000, 16000000000000000000),
(30, 800,  927, 170,  9160000000000000000, 17000000000000000000,  9260000000000000000, 17000000000000000000);

insert into aggoverflowb values (1,  100, -78,    1,         -78000000000,         100000000000,         -78000000000,         100000000000),
(2,  100, -79,    2,         -79000000000,         200000000000,         -79000000000,         200000000000),
(3,  100, -80,    3,         -80000000000,         300000000000,         -80000000000,         300000000000),
(4,  100, -81,    4,         -81000000000,         400000000000,         -81000000000,         400000000000),
(5,  200, -82,    5,         -82000000000,         500000000000,         -82000000000,         500000000000),
(6,  200, -83,    6,         -83000000000,         600000000000,         -83000000000,         600000000000),
(7,  200, -84,    7,         -84000000000,         700000000000,         -84000000000,         700000000000),
(8,  200, -85,    8, -8500000000000000000,   800000000000000000, -8500000000000000000,   800000000000000000),
(9,  200, -86,    9, -8600000000000000000,   900000000000000000, -8600000000000000000,   900000000000000000),
(10, 300, -87,    1, -8700000000000000000,   100000000000000000, -8700000000000000000,   100000000000000000),
(11, 400, -88,   10, -8800000000000000000,  1000000000000000000, -8800000000000000000,  1000000000000000000),
(12, 400, -89,   11, -8900000000000000000,  1100000000000000000, -8900000000000000000,  1100000000000000000),
(13, 400, -90,   12, -9000000000000000000,  1200000000000000000, -9000000000000000000,  1200000000000000000),
(14, 400, -91,   13, -9100000000000000000,  1300000000000000000, -9100000000000000000,  1300000000000000000),
(15, 400, -92,   12, -9200000000000000000,  1200000000000000000, -9200000000000000000,  1200000000000000000),
(16, 400,  781,  30,  7800000000000000000,  3000000000000000000,  7800000000000000000,  3000000000000000000),
(17, 400,  792,  40,  7900000000000000000,  4000000000000000000,  7900000000000000000,  4000000000000000000),
(18, 400,  803,  50,  8000000000000000000,  5000000000000000000,  8000000000000000000,  5000000000000000000),
(19, 500,  814,  60,  8100000000000000000,  6000000000000000000,  8100000000000000000,  6000000000000000000),
(20, 500,  825,  70,  8200000000000000000,  7000000000000000000,  8200000000000000000,  7000000000000000000),
(21, 500,  836,  80,  8300000000000000000,  8000000000000000000,  8300000000000000000,  8000000000000000000),
(22, 500,  847,  90,  8400000000000000000,  9000000000000000000,  8400000000000000000,  9000000000000000000),
(23, 500,  858, 100,  8500000000000000000, 10000000000000000000,  8500000000000000000, 10000000000000000000),
(24, 500,  869, 110,  8600000000000000000, 11000000000000000000,  8600000000000000000, 11000000000000000000),
(25, 500,  871, 120,  8700000000000000000, 12000000000000000000,  8700000000000000000, 12000000000000000000),
(26, 600,  882, 130,  8800000000000000000, 13000000000000000000,  8800000000000000000, 13000000000000000000),
(27, 600,  893, 140,  8900000000000000000, 14000000000000000000,  8900000000000000000, 14000000000000000000),
(28, 700,  904, 150,  9000000000000000000, 15000000000000000000,  9000000000000000000, 15000000000000000000),
(29, 700,  915, 160,  9100000000000000000, 16000000000000000000,  9100000000000000000, 16000000000000000000),
(30, 800,  926, 170,  9200000000000000000, 17000000000000000000,  9200000000000000000, 17000000000000000000);

insert into aggoverflowc values (1,  100, -78,   1,  -16000000000000000,    160000000000000000,  -16000000000000000,    160000000000000000),
 (2,  100, -79,   2,  -15000000000000000,    150000000000000000,  -15000000000000000,    150000000000000000),
 (3,  100, -80,   3,  -14000000000000000,    140000000000000000,  -14000000000000000,    140000000000000000),
 (4,  100, -81,   4,  -13000000000000000,    130000000000000000,  -13000000000000000,    130000000000000000),
 (5,  200, -82,   5,  -12000000000000000,    120000000000000000,  -12000000000000000,    120000000000000000),
 (6,  200, -83,   6,  -11000000000000000,    110000000000000000,  -11000000000000000,    110000000000000000),
 (7,  200, -84,   7,  -10000000000000000,    100000000000000000,  -10000000000000000,    100000000000000000),
 (8,  200, -85,   8,   -9000000000000000,     90000000000000000,   -9000000000000000,     90000000000000000),
 (9,  200, -86,   9,   -8000000000000000,     80000000000000000,   -8000000000000000,     80000000000000000),
 (10, 300, -87,   1,   -7000000000000000,     70000000000000000,   -7000000000000000,     70000000000000000),
 (11, 400, -88,  10,   -6000000000000000,     60000000000000000,   -6000000000000000,     60000000000000000),
 (12, 400, -89,  11,   -5000000000000000,     50000000000000000,   -5000000000000000,     50000000000000000),
 (13, 400, -90,  12,   -4000000000000000,     40000000000000000,   -4000000000000000,     40000000000000000),
 (14, 400, -91,  13,   -3000000000000000,     30000000000000000,   -3000000000000000,     30000000000000000),
 (15, 400, -92,  12,   -2000000000000000,     20000000000000000,   -2000000000000000,     20000000000000000),
 (16, 400,  78,  30,   16000000000000000,    160000000000000000,   16000000000000000,    160000000000000000),
 (17, 400,  79,  40,   15000000000000000,    150000000000000000,   15000000000000000,    150000000000000000),
 (18, 400,  80,  50,   14000000000000000,    140000000000000000,   14000000000000000,    140000000000000000),
 (19, 500,  81,  60,   13000000000000000,    130000000000000000,   13000000000000000,    130000000000000000),
 (20, 500,  82,  70,   12000000000000000,    120000000000000000,   12000000000000000,    120000000000000000),
 (21, 500,  83,  80,   11000000000000000,    110000000000000000,   11000000000000000,    110000000000000000),
 (22, 500,  84,  90,   10000000000000000,    100000000000000000,   10000000000000000,    100000000000000000),
 (23, 500,  85, 100,    9100000000000000,     90000000000000000,    9100000000000000,     90000000000000000),
 (24, 500,  86, 110,    8200000000000000,     80000000000000000,    8200000000000000,     80000000000000000),
 (25, 500,  87, 120,    7300000000000000,     70000000000000000,    7300000000000000,     70000000000000000),
 (26, 600,  88, 130,    6400000000000000,     60000000000000000,    6400000000000000,     60000000000000000),
 (27, 600,  89, 140,    5500000000000000,     50000000000000000,    5500000000000000,     50000000000000000),
 (28, 700,  90, 150,    4600000000000000,     40000000000000000,    4600000000000000,     40000000000000000),
 (29, 700,  91, 160,    3700000000000000,     30000000000000000,    3700000000000000,     30000000000000000),
 (30, 800,  92, 170,    2800000000000000,     20000000000000000,    2800000000000000,     20000000000000000);

insert into aggoverflowd values (1,  100, -78.12,   1.1234,  -16000000000.12345,    160000000000000.123),
(2,  100, -79.12,   2.1234,  -15000000000.12345,    150000000000000.123),
(3,  100, -80.12,   3.1234,  -14000000000.12345,    140000000000000.123),
(4,  100, -81.12,   4.1234,  -13000000000.12345,    130000000000000.123),
(5,  200, -82.12,   5.1234,  -12000000000.12345,    120000000000000.123),
(6,  200, -83.12,   6.1234,  -11000000000.12345,    110000000000000.123),
(7,  200, -84.12,   7.1234,  -10000000000.12345,    100000000000000.123),
(8,  200, -85.12,   8.1234,   -9000000000.12345,     90000000000000.123),
(9,  200, -86.12,   9.1234,   -8000000000.12345,     80000000000000.123),
(10, 300, -87.12,   1.1234,   -7000000000.12345,     70000000000000.123),
(11, 400, -88.12,  10.1234,   -6000000000.12345,     60000000000000.123),
(12, 400, -89.12,  11.1234,   -5000000000.12345,     50000000000000.123),
(13, 400, -90.12,  12.1234,   -4000000000.12345,     40000000000000.123),
(14, 400, -91.12,  13.1234,   -3000000000.12345,     30000000000000.123),
(15, 400, -92.12,  12.1234,   -2000000000.12345,     20000000000000.123),
(16, 400,  78.12,  30.1234,   16000000000.12345,    160000000000000.123),
(17, 400,  79.12,  40.1234,   15000000000.12345,    150000000000000.123),
(18, 400,  80.12,  50.1234,   14000000000.12345,    140000000000000.123),
(19, 500,  81.12,  60.1234,   13000000000.12345,    130000000000000.123),
(20, 500,  82.12,  70.1234,   12000000000.12345,    120000000000000.123),
(21, 500,  83.12,  80.1234,   11000000000.12345,    110000000000000.123),
(22, 500,  84.12,  90.1234,   10000000000.12345,    100000000000000.123),
(23, 500,  85.12, 100.1234,    9100000000.12345,     90000000000000.123),
(24, 500,  86.12, 110.1234,    8200000000.12345,     80000000000000.123),
(25, 500,  87.12, 120.1234,    7300000000.12345,     70000000000000.123),
(26, 600,  88.12, 130.1234,    6400000000.12345,     60000000000000.123),
(27, 600,  89.12, 140.1234,    5500000000.12345,     50000000000000.123),
(28, 700,  90.12, 150.1234,    4600000000.12345,     40000000000000.123),
(29, 700,  91.12, 160.1234,    3700000000.12345,     30000000000000.123),
(30, 800,  92.12, 170.1234,    2800000000.12345,     20000000000000.123);

SELECT grp, SUM(f1), AVG(f2), SUM(f3) sum_f3, AVG(f4), SUM(f5), AVG(f6), count(*) cnt
FROM aggoverflowa
WHERE id > 22
GROUP BY grp
HAVING sum_f3 > 1000
ORDER BY grp;

SELECT grp, SUM(f1), AVG(f1), SUM(f3) sum_d3, AVG(f3), count(*) cnt
FROM aggoverflowb
GROUP BY grp
ORDER BY grp;

SELECT grp, SUM(d1), AVG(d1), SUM(d3) sum_f3, AVG(d3), count(*) cnt
FROM aggoverflowd
GROUP BY grp
ORDER BY grp;

SELECT grp, SUM(f1), AVG(f2), SUM(f3) sum_f3, AVG(f4), SUM(f5), AVG(f6), count(*) cnt
FROM aggoverflowb
GROUP BY grp
ORDER BY grp;

SELECT
   a.grp, SUM(a.f1), AVG(a.f2), SUM(a.f3), AVG(a.f4), SUM(b.f1), AVG(b.f2), SUM(b.f3), AVG(b.f4)
FROM aggoverflowa a, aggoverflowb b
WHERE a.id = b.id GROUP BY a.grp ORDER BY a.grp;

SELECT
   a.grp, SUM(a.f1*c.f3), SUM(a.f1*c.f5), AVG(a.f2*c.f4), AVG(a.f2*c.f6)
FROM aggoverflowa a, aggoverflowc c
WHERE a.id = c.id GROUP BY a.grp ORDER BY a.grp;

SELECT AVG(f3) avgb from aggoverflowb
UNION
SELECT SUM(f3) sumc FROM aggoverflowc
ORDER BY avgb;

SELECT SUM(f3) suma FROM aggoverflowa
UNION
SELECT AVG(f3) avgb from aggoverflowb
UNION
SELECT SUM(f3) sumc FROM aggoverflowc
ORDER BY suma;

SELECT SUM(suma) sa FROM
( SELECT SUM(f3) suma FROM aggoverflowa
UNION
  SELECT AVG(f3) avgb from aggoverflowb
UNION
  SELECT SUM(f3) sumc FROM aggoverflowc ) t
ORDER BY sa;

SELECT SUM(suma) sa FROM
( SELECT SUM(f3) suma FROM aggoverflowa
UNION
  SELECT AVG(avgc) FROM (SELECT AVG(f3) avgc from aggoverflowc) aggb
UNION
  SELECT SUM(sumb) FROM (SELECT SUM(f3) AS sumb FROM aggoverflowb) aggc ) t
ORDER BY sa;

SELECT SUM(suma) sa FROM
( SELECT SUM(f5) suma FROM aggoverflowa
UNION
  SELECT AVG(avgc) FROM (SELECT AVG(f5) avgc from aggoverflowc) aggb
UNION
  SELECT SUM(sumb) FROM (SELECT SUM(f5) AS sumb FROM aggoverflowb) aggc ) t
ORDER BY sa;

SELECT
   b.grp,
   TRUNCATE(SUM(a.f1 * b.f2), -2) AS VALUE FROM aggoverflowa a, aggoverflowb b, aggoverflowc c
     WHERE a.id = b.id AND a.id = c.id AND a.grp < 600 and c.grp > 100 GROUP BY b.grp
HAVING SUM(a.f3 * c.f4) > ( SELECT SUM(f3 * f4 / f6) FROM aggoverflowc WHERE id < 100 )
    ORDER BY VALUE DESC;

SELECT
   d.grp,
   SUM(a.f1 * d.d2) AS VALUE FROM aggoverflowa a, aggoverflowd d, aggoverflowc c
     WHERE a.id = d.id AND a.id = c.id AND a.grp < 600 and c.grp > 100 GROUP BY d.grp
HAVING SUM(d.d3 * d.d4) > ( SELECT SUM(f3 * f4 / f6) FROM aggoverflowc WHERE id < 100 )
    ORDER BY VALUE DESC;

select a.f2, c.f4, if (ifnull(SUM(a.f1),0) > 0,1,99) as test1,
if (ifnull(SUM(c.f6),0) > 0 && ifnull(COUNT(*),0) > 0, CONCAT('1:', ROUND(SUM(a.f1) / COUNT(*),1)),'n/a') as 'Ratio Test'
from aggoverflowa a LEFT OUTER JOIN aggoverflowc c using (id) where a.grp=200 group by a.f2,
c.f4 order by 1, 2, 3, 4;

set columnstore_double_for_decimal_math=1;
select s/d from (select b.f3, sum(a.f3) s, count(distinct a.f5) d from aggoverflowa a join aggoverflowb b on a.id=b.id group by 1) s1 order by 1;

SELECT SUM(d4) OVER (PARTITION BY grp ORDER BY id RANGE 2 preceding), id, d1, d2 from aggoverflowd where id < 25 order by grp;

select grp,
  sum(f3) + sum(f4) as res,
  rank() over (order by sum(f3) + sum(f4)) as rank
from aggoverflowa
group by grp order by grp;

SELECT avg(daily_cnt),
    format(avg(daily_cnt), 0) avg_rows_per_day,
    sum(daily_cnt),
    format(sum(daily_cnt), 0) total_rows
from (select id, grp, count(*) daily_cnt
      from aggoverflowc where grp in (100,300,500) group by 1) a,
     aggoverflowa b where a.id = b.id;

DROP DATABASE sumavgoverflow;
